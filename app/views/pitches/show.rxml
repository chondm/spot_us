xml.instruct! :xml, :version=>"1.0" 

xml.pitch {
  
  apply_fragment ['pitch_header_api_', @pitch] do
    xml.headline @pitch.headline
    xml.createdAt @pitch.created_at
    xml.updatedAt @pitch.updated_at
    xml.permaLink pitch_path(@pitch, {:only_path => false})
    xml.featuredImage @pitch.featured_image.url(:thumb)

    apply_fragment ['pitch_reporter_api_', @pitch.user] do
      xml.reporter{
          xml.fullName @pitch.user.full_name
          xml.avatar @pitch.user.photo.url(:thumb)
          xml.permaLink profile_path(@pitch.user, {:only_path => false})
      }
    end

    apply_fragment ['pitch_peer_reviewer_api_', @pitch.peer_reviewer] do
      xml.editor {
        xml.fullName @pitch.peer_reviewer.full_name
        xml.avatar @pitch.peer_reviewer.photo.url(:thumb)
        xml.permaLink profile_path(@pitch.peer_reviewer, {:only_path => false})
      } if @pitch.peer_reviewer
    end

    apply_fragment ['pitch_amounts_api_', @pitch] do
      xml.requestedAmount number_to_currency(@pitch.requested_amount)
      xml.currentFunding number_to_currency(@pitch.current_funding)
      xml.fundingNeeded number_to_currency(@pitch.funding_needed)
    end

    xml.shortDescription h(@pitch.excerpt?)
    
  end
  
  apply_fragment ['pitch_header_api_additional_', @pitch] do
    xml.extendedDescription h(@pitch.extended_description)
    xml.videoEmbed h(@pitch.video_embed)
  end
  
  apply_fragment ['pitch_story_api_', @pitch.story] do
    xml.story{
      xml.headline @pitch.story.headline
      xml.createdAt @pitch.story.created_at
      xml.permaLink pitch_path(@pitch.story, {:only_path => false})
      xml.featuredImage @pitch.story.featured_image.url(:thumb)
      
      apply_fragment ['pitch_story_reporter_api_', @pitch.user] do
        xml.reporter{
            xml.fullName @pitch.story.user.full_name
            xml.avatar @pitch.story.user.photo.url(:thumb)
            xml.permaLink profile_path(@pitch.story.user, {:only_path => false})
        }
      end
      apply_fragment ['pitch_story_reporter_api_', @pitch.peer_reviewer] do
        xml.editor {
          xml.fullName @pitch.peer_reviewer.full_name
          xml.avatar @pitch.peer_reviewer.photo.url(:thumb)
          xml.permaLink profile_path(@pitch.peer_reviewer, {:only_path => false})
        } if @pitch.peer_reviewer
      end
      
      xml.shortDescription h(@pitch.story.excerpt?)

    } if @pitch.story
  end

  xml.supporters{
    xml.organizationSupporters {
      if @pitch.supporting_organizations.any? || @pitch.donations_and_credits.from_organizations.any? 
        @pitch.organizational_donors.each do |supporter|
          apply_fragment ['pitch_organizational_donor_api_', supporter] do
            xml.organizationalDonor{
              xml.fullName supporter.full_name
              xml.permaLink profile_path(supporter, {:only_path => false})
              xml.avatar supporter.photo.url(:thumb)
              xml.donationAmount number_to_currency(supporter.amount_donated_to(@pitch))
            }
          end
        end
        @pitch.supporting_organizations.each do |supporter|
          apply_fragment ['pitch_organizational_supporter_api_', supporter] do
            xml.organizationalSupporter{
              xml.fullName supporter.full_name
              xml.permaLink profile_path(supporter, {:only_path => false})
              xml.avatar supporter.photo.url(:thumb)
            }
          end
        end
      end
    }
    xml.groupSupporters {
      @pitch.donating_groups.each do |group|
        apply_fragment ['pitch_group_donor_api_', group] do
          xml.groupDonor {
            xml.groupName group.name 
            xml.permaLink group_path(group, { :only_path => false })
            xml.avatar group.image.url(:thumb)
            xml.donationAmount number_to_currency(group.donations_for_pitch(@pitch))
          }
        end
      end
    }
    xml.ccaSupporters {
      xml.totalAmountDonated number_to_currency(Donation.cca_supporters(@pitch.id).map{ |obj| obj.cca_total_amount.to_f }.sum)
      if !Donation.cca_supporters(@pitch.id).all.empty?
        via_cca_supporters_for(@pitch).each do |donation|
          apply_fragment ['pitch_cca_supporter_api_', donation] do
            xml.ccaSupporter{
              xml.ccaTitle donation.cca.title 
              xml.permaLink cca_path(donation.cca, { :only_path => false })
              xml.avatar donation.cca.user.photo.url(:thumb)
              xml.donationAmount number_to_currency(donation.cca_total_amount)
            }
          end
        end
      end
    }
    xml.publicSupporters {
      xml.totalAmountDonated number_to_currency(@pitch.total_amount_donated)
      if citizen_supporters_for(@pitch).any?
        citizen_supporters_for(@pitch).each do |supporter|
          apply_fragment ['pitch_public_supporter_api_', supporter] do
            xml.publicSupporter{
              xml.fullName supporter.full_name
              xml.permaLink profile_path(supporter, {:only_path => false})
              xml.avatar supporter.photo.url(:thumb)
              xml.donationAmount number_to_currency(supporter.amount_donated_to(@pitch))
            }
          end
        end
      end
    }
  }
  
}
